<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="board">
    <select id="findAll" resultType="boardVo">
        select
            b.*,
            (select count(*) from attachment where board_id = b.id) attach_count,
            (select count(*) from board_comment where board_id = b.id) comment_count
        from
            board b
        order by
            id desc
    </select>
    <!--
      mybatis를 이용해서 조인쿼리
      - resultType 대신 resultMap 사용
      - 1:n관계 <collection> 사용
      - 1:1관계 <assocation> 사용
    -->
    <select id="findById" resultMap="boardVoMap">
        select
            b.*,
            m.name member_name,
            a.id attach_id,
            a.board_id,
            a.original_filename,
            a.renamed_filename,
            a.reg_date attach_reg_date
        from
            board b
                left join member m
                          on b.member_id = m.id
                left join attachment a
                          on b.id = a.board_id
        where
            b.id = #{id}
    </select>
    <!--
      <id/> 식별자 컬럼
      <result/> 식별자가 아닌 컬럼
      <collection/> 1:N관계에서 N에 해당하는 속성 처리(List)
      <association/> 1:1관계에서 상대 1에 해당하는 속성 처리(vo)
    -->
    <resultMap id="boardVoMap" type="boardVo">
        <id column="id" property="id"/>
        <result column="title" property="title"/>
        <result column="member_id" property="memberId"/>
        <result column="content" property="content"/>
        <result column="read_count" property="readCount"/>
        <result column="reg_date" property="regDate"/>
        <association property="member" javaType="member">
            <id column="member_id" property="id"/>
            <result column="member_name" property="name"/>
        </association>
        <collection property="attachments" ofType="attachment">
            <id column="attach_id" property="id"/>
            <result column="board_id" property="boardId"/>
            <result column="original_filename" property="originalFilename"/>
            <result column="renamed_filename" property="renamedFilename"/>
            <result column="attach_reg_date" property="regDate"/>
        </collection>
    </resultMap>
    <update id="updateBoardReadCount">
        update
            board
        set
            read_count = read_count + 1
        where
            id = #{id}
    </update>
    <insert id="insertBoard">
        insert into
        board (id, title, member_id, content)
        values(
        seq_board_id.nextval,
        #{title},
        #{memberId},
        #{content}
        )
        <selectKey order="AFTER" resultType="_int" keyProperty="id">
            select
            seq_board_id.currval
            from
            dual
        </selectKey>
    </insert>
    <insert id="insertAttachment">
        insert into
            attachment (id, board_id, original_filename, renamed_filename)
        values(
                  seq_attachment_id.nextval,
                  #{boardId},
                  #{originalFilename},
                  #{renamedFilename}
              )
    </insert>
    <update id="updateBoard">
        update
            board
        set
            title = #{title},
            content= #{content}
        where
            id = #{id}
    </update>
    <delete id="deleteBoard">
        delete from
            board
        where
            id = #{id}
    </delete>
    <select id="getTotalCount" resultType="_int">
        select
            count(*)
        from
            board
    </select>
    <delete id="deleteAttachment">
        delete from
            attachment
        where
            id = #{id}
    </delete>
    <select id="findCommentByBoardId" resultType="boardComment">
        select
            *
        from
            board_comment
        where
            board_id = #{boardId}
            start with
            comment_level = 1
        connect by
            prior id = parent_comment_id
        order siblings by
            id
    </select>
    <insert id="insertBoardComment">
        insert into
        board_comment
        values(
        seq_board_comment_id.nextval,
        #{boardId},
        #{memberId},
        #{content},
        #{commentLevel},
        #{parentCommentId},
        default
        )
        <selectKey order="AFTER" resultType="_long" keyProperty="id">
            select
            seq_board_comment_id.currval
            from
            dual
        </selectKey>
    </insert>
    <select id="findCommentById" resultType="boardComment">
        select
            *
        from
            board_comment
        where
            id = #{id}
    </select>
    <delete id="deleteBoardComment">
        delete from
            board_comment
        where
            id = #{id}
    </delete>
</mapper>